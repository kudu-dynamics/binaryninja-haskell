# Build with `docker build .. -f Dockerfile.base`, i.e., it needs binary-analysis in the context

ARG DEVOPS_DOCKER_REGISTRY=${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/devops
ARG DEVOPS_BINARYNINJA_IMAGE_TAG=latest

# From blaze-system/deps/binja
FROM ${DEVOPS_DOCKER_REGISTRY}/binary-ninja:${DEVOPS_BINARYNINJA_IMAGE_TAG} as binaryninja
RUN apt update && apt install -yq \
    autoconf \
    automake \
    build-essential \
    netbase \
    wget \
    unzip \
    libtinfo-dev \
    haskell-stack \
    git \
    locales

# Generate and set en_US.UTF-8 locale
RUN locale-gen en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV PATH="/root/.local/bin${PATH:+:$PATH}"

RUN stack upgrade --binary-only

# Update Binary Ninja
ARG BLAZE_BINJA_CHANNEL=dev
ARG BLAZE_BINJA_VERSION=LATEST
ARG BLAZE_BINJA_API_COMMIT=origin/dev
RUN /usr/local/bin/binja_api_update "${BINJA_API}" "${BLAZE_BINJA_API_COMMIT}"
RUN python3 /usr/local/bin/binjaupdater.py "${BLAZE_BINJA_CHANNEL}" "${BLAZE_BINJA_VERSION}"

COPY /binaryninja-haskell/ /tmp/binaryninja-haskell-deps/binaryninja-haskell/
COPY /binary-analysis/ /tmp/binaryninja-haskell-deps/binary-analysis/
RUN cd /tmp/binaryninja-haskell-deps/binaryninja-haskell && \
    stack build --only-dependencies --test --no-run-tests && \
    cd / && \
    rm -rf /tmp/blaze-deps
